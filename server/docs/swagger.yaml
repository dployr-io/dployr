basePath: /v1
definitions:
  auth.MagicCodeRequest:
    properties:
      email:
        type: string
      name:
        description: Optional for signup
        type: string
    required:
    - email
    type: object
  auth.MagicCodeVerify:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
  gin.H:
    additionalProperties: {}
    type: object
  platform.SshConnectRequest:
    properties:
      hostname:
        type: string
      password:
        type: string
      port:
        type: integer
      username:
        type: string
    type: object
  projects.CreateProjectRequest:
    properties:
      deployment_url:
        type: string
      domain:
        type: string
      environment:
        additionalProperties:
          type: string
        type: object
      git_repo:
        type: string
      host_configs:
        additionalProperties: {}
        type: object
      name:
        type: string
      provider:
        type: string
      status:
        type: string
    required:
    - git_repo
    - name
    - provider
    type: object
  projects.UpdateProjectRequest:
    properties:
      deployment_url:
        type: string
      domain:
        type: string
      environment:
        additionalProperties:
          type: string
        type: object
      git_repo:
        type: string
      host_configs:
        additionalProperties: {}
        type: object
      name:
        type: string
      provider:
        type: string
      status:
        type: string
    type: object
host: localhost:7879
info:
  contact:
    email: support@dployr.io
    name: API Support
    url: https://dployr.io/support
  description: Your app, your server, your rules
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://dployr.io/terms
  title: dployr API
  version: "0.1"
paths:
  /api/projects:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all projects for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Projects retrieved successfully
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - BearerAuth: []
      summary: Get all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new deployment project with the provided configuration
      parameters:
      - description: Project creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/projects.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Project created successfully
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
        "429":
          description: Too many requests
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - BearerAuth: []
      summary: Create a new project
      tags:
      - projects
  /api/projects/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific project by its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Project retrieved successfully
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - BearerAuth: []
      summary: Get a project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update an existing project with new configuration
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/projects.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Project updated successfully
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/gin.H'
        "429":
          description: Too many requests
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - BearerAuth: []
      summary: Update a project
      tags:
      - projects
  /auth/request-code:
    post:
      consumes:
      - application/json
      description: Request a 6-digit magic code to be sent to the user's email for
        authentication
      parameters:
      - description: Magic code request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.MagicCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Magic code sent successfully
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/gin.H'
        "429":
          description: Too many requests
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Request magic code for authentication
      tags:
      - auth
  /health:
    get:
      consumes:
      - application/json
      description: Get the current health status and statistics of the application
      produces:
      - application/json
      responses:
        "200":
          description: Health status retrieved successfully
          schema:
            $ref: '#/definitions/gin.H'
      summary: Health check
      tags:
      - system
  /ssh/connect:
    post:
      consumes:
      - application/json
      description: Establish an SSH connection to a remote server and return a session
        ID for WebSocket communication
      parameters:
      - description: SSH connection request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/platform.SshConnectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: SSH connection established successfully
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: SSH authentication failed
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create SSH connection
      tags:
      - ssh
  /ws/ssh/{session-id}:
    get:
      description: Establish a WebSocket connection for real-time SSH terminal communication
      parameters:
      - description: SSH Session ID
        in: path
        name: session-id
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols
          schema:
            type: string
        "400":
          description: Invalid session ID
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Session not found
          schema:
            $ref: '#/definitions/gin.H'
      summary: WebSocket SSH terminal
      tags:
      - ssh
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
