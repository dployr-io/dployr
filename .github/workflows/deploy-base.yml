name: Deploy Dployr Base

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches: [master]

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      # Setup Node.js + pnpm caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      # Install deps via pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Deploy to staging
      - name: Deploy (staging)
        run: pnpm exec wrangler deploy --env staging
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      # Install deps via pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Deploy to production
      - name: Deploy (production)
        run: pnpm exec wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
